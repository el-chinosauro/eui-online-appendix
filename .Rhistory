"T", "C", "Diff", "KS", "eCDF")
print(xt, sanitize.colnames.function = bold,
sanitize.rownames.function = bold,
sanitize.text.function = identity)
library(tidyverse)
library(sf)
load("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/results/dryland-cf-pop-161718-2.RData")
library(tidyverse)
library(sf)
load("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/results/dryland-cf-pop-161718-2.RData")
prova <- data.frame(
Y = PSM_DDD_virginclip_pop2017$mdata$Y,
Tr = PSM_DDD_virginclip_pop2017$mdata$Tr,
W = PSM_DDD_virginclip_pop2017$weights,
T = PSM_DDD_virginclip_pop2017$index.treated
)
prova <- prova %>%
filter(Tr==1)
prova <- distinct(prova, T, .keep_all = TRUE)
x = PSM_DDD_virginclip_pop2017$mdata$X
x1 = x[1,]
x2 = x[2,]
prova2 <- data.frame(
Yt = PSM_DDD_virginclip_pop2017$mdata$Y,
Tr = PSM_DDD_virginclip_pop2017$mdata$Tr,
W = PSM_DDD_virginclip_pop2017$weights,
Tt = PSM_DDD_virginclip_pop2017$index.treated,
C = PSM_DDD_virginclip_pop2017$index.control) %>%
slice(1:380952)
prova3 <- data.frame(
Yc = PSM_DDD_virginclip_pop2017$mdata$Y,
Tr = PSM_DDD_virginclip_pop2017$mdata$Tr,
W = PSM_DDD_virginclip_pop2017$weights,
Tt = PSM_DDD_virginclip_pop2017$index.treated,
C = PSM_DDD_virginclip_pop2017$index.control) %>%
slice(380953:761904)
matched <- merge(prova2, prova3, by = c("W", "Tt", "C")) %>%
mutate(Yd = W*(Yt-Yc)) %>%
dplyr::select(one_of(c("W", "Tt", "Yd"))) %>%
group_by(Tt) %>%
summarise(Yd = weighted.mean(Yd, W))
load("~/Dropbox/PHD/Indonesia_GPS/data-for-analyses/virginclip_pop.RData")
virginclip_pop <- virginclip_pop %>%
filter(peat_depth_GW==0) %>%
mutate(nrow = rownames(.))
virginprova <- virginclip_pop %>%
dplyr::select(one_of(c("id", "adm1", "adm2", "nrow", "agc_bcc_mean"))) %>%
filter(nrow %in% matched$Tt) %>%
rename(Tt = nrow)
matched_id <- merge(virginprova, matched, by = "Tt") %>%
dplyr::select(-Tt) %>%
mutate(Cd = Yd*agc_bcc_mean*3.67)
adm2 <- sf::read_sf(dsn = "~/Desktop/PHD/IDN-Data/adm2", layer = "IDN_adm2") %>%
mutate(adm2 = NAME_2) %>%
dplyr::select(-NAME_2)
matched_adm2 <- matched_id %>%
group_by(adm2) %>%
summarise(Yd = mean(Yd),
Cd = sum(Cd))
adm2=adm2 %>%
filter(adm2 %in% matched_adm2$adm2) %>%
filter(!duplicated(adm2))
matched_adm2M <- merge(adm2,matched_adm2,by = "adm2", all.x = TRUE)
write_sf(matched_adm2M, paste0("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/figures-pnas-revision", "/", "ATT-adm2.shp"))
library(tidyverse)
library(sf)
load("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/results/dryland-cf-pop-161718-2.RData")
prova <- data.frame(
Y = PSM_DDD_virginclip_pop2017$mdata$Y,
Tr = PSM_DDD_virginclip_pop2017$mdata$Tr,
W = PSM_DDD_virginclip_pop2017$weights,
T = PSM_DDD_virginclip_pop2017$index.treated
)
prova <- prova %>%
filter(Tr==1)
prova <- distinct(prova, T, .keep_all = TRUE)
x = PSM_DDD_virginclip_pop2017$mdata$X
x1 = x[1,]
x2 = x[2,]
prova2 <- data.frame(
Yt = PSM_DDD_virginclip_pop2017$mdata$Y,
Tr = PSM_DDD_virginclip_pop2017$mdata$Tr,
W = PSM_DDD_virginclip_pop2017$weights,
Tt = PSM_DDD_virginclip_pop2017$index.treated,
C = PSM_DDD_virginclip_pop2017$index.control) %>%
slice(1:363929)
prova3 <- data.frame(
Yc = PSM_DDD_virginclip_pop2017$mdata$Y,
Tr = PSM_DDD_virginclip_pop2017$mdata$Tr,
W = PSM_DDD_virginclip_pop2017$weights,
Tt = PSM_DDD_virginclip_pop2017$index.treated,
C = PSM_DDD_virginclip_pop2017$index.control) %>%
slice(363930:727858)
matched <- merge(prova2, prova3, by = c("W", "Tt", "C")) %>%
mutate(Yd = W*(Yt-Yc)) %>%
dplyr::select(one_of(c("W", "Tt", "Yd"))) %>%
group_by(Tt) %>%
summarise(Yd = weighted.mean(Yd, W))
load("~/Dropbox/PHD/Indonesia_GPS/data-for-analyses/virginclip_pop.RData")
virginclip_pop <- virginclip_pop %>%
filter(peat_depth_GW==0) %>%
mutate(nrow = rownames(.))
virginprova <- virginclip_pop %>%
dplyr::select(one_of(c("id", "adm1", "adm2", "nrow", "agc_bcc_mean"))) %>%
filter(nrow %in% matched$Tt) %>%
rename(Tt = nrow)
matched_id <- merge(virginprova, matched, by = "Tt") %>%
dplyr::select(-Tt) %>%
mutate(Cd = Yd*agc_bcc_mean*3.67)
adm2 <- sf::read_sf(dsn = "~/Desktop/PHD/IDN-Data/adm2", layer = "IDN_adm2") %>%
mutate(adm2 = NAME_2) %>%
dplyr::select(-NAME_2)
matched_adm2 <- matched_id %>%
group_by(adm2) %>%
summarise(Yd = mean(Yd),
Cd = sum(Cd))
adm2=adm2 %>%
filter(adm2 %in% matched_adm2$adm2) %>%
filter(!duplicated(adm2))
matched_adm2M <- merge(adm2,matched_adm2,by = "adm2", all.x = TRUE)
write_sf(matched_adm2M, paste0("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/figures-pnas-revision", "/", "ATT-adm2.shp"))
######################################
### TABLES : COVARIATE BALANCE ###
######################################
library(Matching)
library(purrr)
library(dplyr)
library(magrittr)
library(xtable)
source("~/Dropbox/PHD/Indonesia_GPS/replication-package/tables-source.R")
load("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/results/dryland-balance-primary-2.RData")
#for balance tables:
# remember to add multicolumn command manually in LaTeX.
# Table S27
xt <- xtable(balancetabler(baseline_balance_virginclip_pop))
colnames(xt) <- c("T", "C", "Diff", "KS", "eCDF",
"T", "C", "Diff", "KS", "eCDF")
print(xt, sanitize.colnames.function = bold,
sanitize.rownames.function = bold,
sanitize.text.function = identity)
####### PEATLAND #########
rm(list=ls())
library(Matching)
library(purrr)
library(dplyr)
library(magrittr)
library(xtable)
source("~/Dropbox/PHD/Indonesia_GPS/replication-package/tables-source.R")
load("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/results/peatland-balance-primary-2.RData")
# Table S33
xt <- xtable(balancetabler(baseline_balance_virginclip_pop))
colnames(xt) <- c("T", "C", "Diff", "KS", "eCDF",
"T", "C", "Diff", "KS", "eCDF")
print(xt, sanitize.colnames.function = bold,
sanitize.rownames.function = bold,
sanitize.text.function = identity)
# # Table S34
# xt2 <- xtable(balancetabler2(baseline_balance_virginclip_pop_pla))
# colnames(xt2) <- c("T", "C", "Diff", "KS", "eCDF",
#                    "T", "C", "Diff", "KS", "eCDF")
#
# print(xt2, sanitize.colnames.function = bold,
#       sanitize.rownames.function = bold,
#       sanitize.text.function = identity)
#
#
# # Table S35
# xt3 <- xtable(balancetabler(baseline_balance_virginclip_pop2))
# colnames(xt3) <- c("T", "C", "Diff", "KS", "eCDF",
#                    "T", "C", "Diff", "KS", "eCDF")
#
# print(xt3, sanitize.colnames.function = bold,
#       sanitize.rownames.function = bold,
#       sanitize.text.function = identity)
#
# # Table S36
# xt4 <- xtable(balancetabler2(baseline_balance_virginclip_pop2_pla))
# colnames(xt4) <- c("T", "C", "Diff", "KS", "eCDF",
#                    "T", "C", "Diff", "KS", "eCDF")
#
# print(xt4, sanitize.colnames.function = bold,
#       sanitize.rownames.function = bold,
#       sanitize.text.function = identity)
#
#
# # Table S37
# xt5 <- xtable(balancetabler(baseline_balance_virginclip_pop3))
# colnames(xt5) <- c("T", "C", "Diff", "KS", "eCDF",
#                    "T", "C", "Diff", "KS", "eCDF")
#
# print(xt5, sanitize.colnames.function = bold,
#       sanitize.rownames.function = bold,
#       sanitize.text.function = identity)
#
# # Table S38
# xt6 <- xtable(balancetabler2(baseline_balance_virginclip_pop3_pla))
# colnames(xt6) <- c("T", "C", "Diff", "KS", "eCDF",
#                    "T", "C", "Diff", "KS", "eCDF")
#
# print(xt6, sanitize.colnames.function = bold,
#       sanitize.rownames.function = bold,
#       sanitize.text.function = identity)
######################################
### TABLES FOR PSM-DID REGRESSIONS ###
######################################
library(Matching)
library(purrr)
library(dplyr)
library(magrittr)
library(xtable)
source("~/Dropbox/PHD/Indonesia_GPS/replication-package/tables-source.R")
load("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/results/dryland-cf-pop-1215-2-0001.RData")
load("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/results/dryland-cf-pop-161718-2-0001.RData")
######################################
### TABLES FOR PSM-DID REGRESSIONS ###
######################################
library(Matching)
library(purrr)
library(dplyr)
library(magrittr)
library(xtable)
source("~/Dropbox/PHD/Indonesia_GPS/replication-package/tables-source.R")
load("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/results/dryland-cf-pop-1215-0001.RData")
load("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/results/dryland-cf-pop-161718-0001.RData")
library(tidyverse)
library(sf)
library(rnaturalearth)
library(ggthemes)
library(ggspatial)
library(ggmap)
##### Import spatial grid #####
# grid1 <-  read_sf(dsn = "~/Dropbox/PHD/Indonesia_GPS/pop_tiles", layer = "lspop000N090E")
# grid2 <-  read_sf(dsn = "~/Dropbox/PHD/Indonesia_GPS/pop_tiles", layer = "lspop000N100E")
# grid3 <-  read_sf(dsn = "~/Dropbox/PHD/Indonesia_GPS/pop_tiles", layer = "lspop000N110E")
# grid4 <-  read_sf(dsn = "~/Dropbox/PHD/Indonesia_GPS/pop_tiles", layer = "lspop000N120E")
# grid5 <-  read_sf(dsn = "~/Dropbox/PHD/Indonesia_GPS/pop_tiles", layer = "lspop000N130E")
# grid6 <-  read_sf(dsn = "~/Dropbox/PHD/Indonesia_GPS/pop_tiles", layer = "lspop000N140E")
# grid7 <-  read_sf(dsn = "~/Dropbox/PHD/Indonesia_GPS/pop_tiles", layer = "lspop010N090E")
# grid8 <-  read_sf(dsn = "~/Dropbox/PHD/Indonesia_GPS/pop_tiles", layer = "lspop010N100E")
# grid9 <-  read_sf(dsn = "~/Dropbox/PHD/Indonesia_GPS/pop_tiles", layer = "lspop010N110E")
# grid10 <- read_sf(dsn = "~/Dropbox/PHD/Indonesia_GPS/pop_tiles", layer = "lspop010N120E")
# grid11 <- read_sf(dsn = "~/Dropbox/PHD/Indonesia_GPS/pop_tiles", layer = "lspop010N130E")
# grid12 <- read_sf(dsn = "~/Dropbox/PHD/Indonesia_GPS/pop_tiles", layer = "lspop010S110E")
# grid13 <- read_sf(dsn = "~/Dropbox/PHD/Indonesia_GPS/pop_tiles", layer = "lspop010S120E")
#
# cols_rm <- c("forest2000","forest20_1","forest20_2", "slopemean","elevmean","elevmean_1","distroadme","distwaterm",
#              "X_mean", "X_mean_1", "ar_pxlc", "area_pxlco")
#
#
# grid1  <- grid1  %>% dplyr::select(-one_of(cols_rm))
# grid2  <- grid2  %>% dplyr::select(-one_of(cols_rm))
# grid3  <- grid3  %>% dplyr::select(-one_of(cols_rm))
# grid4  <- grid4  %>% dplyr::select(-one_of(cols_rm))
# grid5  <- grid5  %>% dplyr::select(-one_of(cols_rm))
# grid6  <- grid6  %>% dplyr::select(-one_of(cols_rm))
# grid7  <- grid7  %>% dplyr::select(-one_of(cols_rm))
# grid8  <- grid8  %>% dplyr::select(-one_of(cols_rm))
# grid9  <- grid9  %>% dplyr::select(-one_of(cols_rm))
# grid10 <- grid10 %>% dplyr::select(-one_of(cols_rm))
# grid11 <- grid11 %>% dplyr::select(-one_of(cols_rm))
# grid12 <- grid12 %>% dplyr::select(-one_of(cols_rm))
# grid13 <- grid13 %>% dplyr::select(-one_of(cols_rm))
#
# full_tiles <- rbind(grid1,
#                     grid2,
#                     grid3,
#                     grid4,
#                     grid5,
#                     grid6,
#                     grid7,
#                     grid8,
#                     grid9,
#                     grid10,
#                     grid11,
#                     grid12,
#                     grid13)
#
# full_tiles <- full_tiles %>%
#   distinct(geometry, .keep_all = TRUE)
#
# rm(grid1,
#    grid2,
#    grid3,
#    grid4,
#    grid5,
#    grid6,
#    grid7,
#    grid8,
#    grid9,
#    grid10,
#    grid11,
#    grid12,
#    grid13,
#    cols_rm)
#
# full_tiles <- tibble::rowid_to_column(full_tiles, "id") %>%
#   dplyr::select(-one_of(c("left", "bottom", "right", "top")))
##### Get geometries for dropped, treated & control cells #####
load("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/results/dryland-cf-pop-161718-0001.RData")
load("~/Dropbox/PHD/Indonesia_GPS/data-for-analyses/virginclip_pop.RData")
virginclip_pop <- virginclip_pop %>%
filter(peat_depth_GW==0) %>%
relocate(geometry, .after = pop_2018) %>%
st_as_sf() %>%
mutate(rowid = 1:n())
treated = unique(PSM_DDD_virginclip_pop2017$index.treated)
control = unique(PSM_DDD_virginclip_pop2017$index.control)
dropped = unique(PSM_DDD_virginclip_pop2017$index.dropped)
virginclip_map = virginclip_pop %>%
filter(rowid %in% treated | rowid %in% control | rowid %in% dropped) %>%
mutate(status = case_when(
rowid %in% treated ~ "Treated",
rowid %in% control ~ "Control",
rowid %in% dropped ~ "Dropped"
)) %>%
dplyr::select(one_of(c("status", "geometry")))
virginclip_map2 = virginclip_map %>%
filter(status == "Dropped")
virginclip_map3 = virginclip_map %>%
filter(status == "Dropped")
# write_sf(virginclip_map, paste0("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/r-scripts-figures/map-of-cells", "/", "virgin-map.shp"))
countries50 <- ne_download(scale = 50, type = 'countries', category = 'cultural', returnclass = "sf")
idn <- countries50 %>%
filter(ADMIN == "Indonesia")
rm(countries50)
prova_map = virginclip_map2 %>%
st_centroid()
# prova_map_t = cbind(prova_map[,1], st_coordinates(prova_map))
ggplot() +
geom_sf(data = idn, fill = "white", colour = "grey", size=0.35) +
geom_sf(data = prova_map, size = 0.03, colour = "#00BFC4", alpha = 0.3, show.legend = "point") +
theme_void()
ggplot() +
geom_sf(data = idn, fill = "white", colour = "grey", size=0.35) +
geom_sf(data = prova_map, size = 0.1, colour = "#00BFC4", alpha = 0.3, show.legend = "point") +
theme_void()
ggplot() +
geom_sf(data = idn, fill = "white", colour = "grey", size=0.35) +
geom_sf(data = prova_map, size = 0.6, colour = "#00BFC4", alpha = 0.3, show.legend = "point") +
theme_void()
ggplot() +
geom_sf(data = idn, fill = "white", colour = "grey", size=0.35) +
geom_sf(data = prova_map, size = 0.6, colour = "#00BFC4", alpha = 0.7, show.legend = "point") +
theme_void()
ggplot() +
geom_sf(data = idn, fill = "white", colour = "grey", size=0.35) +
geom_sf(data = prova_map, size = 1, colour = "#00BFC4", alpha = 0.7, show.legend = "point") +
theme_void()
View(PSM_DDD_virginclip_pop2017)
######################################
### TABLES FOR PSM-DID REGRESSIONS ###
######################################
library(Matching)
library(purrr)
library(dplyr)
library(magrittr)
library(xtable)
source("~/Dropbox/PHD/Indonesia_GPS/replication-package/tables-source.R")
load("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/results/dryland-cf-pop-1215-0001.RData")
load("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/results/dryland-cf-pop-161718-0001.RData")
### 1. Main Results: PSM-DID on 5 land uses, full sample (no buffers) ###
#list regressions
psmain <- list(PSM_DDD_virginclip_pop2012,
PSM_DDD_virginclip_pop2013,
PSM_DDD_virginclip_pop2014,
PSM_DDD_virginclip_pop2015,
PSM_DDD_virginclip_pop2016,
PSM_DDD_virginclip_pop2017,
PSM_DDD_virginclip_pop2018)
#transform into dataframe (unlist)
psmain <- psmain %>%
map(., chainer) %>%
map_dfr(., decharacterise) %>%
mutate_at(c("ATT", "AI SE", "t-stat", "Treated", "Matched"), round, digits = 3) %>%
mutate(pvalue = gsub("<", "", as.character(pvalue))) %>%
mutate(pvalue = as.numeric(pvalue)) %>%
mutate(pvalue = format(round(pvalue, digits = 3), nsmall = 3)) %>%
mutate(ATT = case_when(pvalue < 0.01 ~ paste0(ATT,"***"),
pvalue < 0.05 & pvalue >= 0.01 ~ paste0(ATT,"**"),
pvalue < 0.1 & pvalue >= 0.05 ~ paste0(ATT,"*"),
pvalue > 0.1 ~ paste0(ATT,""))) %>%
mutate(Dropped = Treated - Matched) %>%
set_rownames(c("Endpoint 2012",
"Endpoint 2013",
"Endpoint 2014",
"Endpoint 2015",
"Endpoint 2016",
"Endpoint 2017",
"Endpoint 2018")) %>%
rename("p-value" = pvalue)
#relist and add notes
mainlist <- list(psmain)
attr(mainlist, "message") <- c("\\scriptsize{\\textit{Notes}: \\textcite{Abadie2006} standard errors.}",
"\\scriptsize{Maximum caliper width: $0.0001$. 1-to-1 matching with replacement, keeping ties.}",
"\\scriptsize{* $p < 0.1$, ** $p < 0.05$, *** $p < 0.01$.}")
#print LaTeX table
print(xtableList(mainlist, digits = c(0,4,4,3,4,0,0,0), align = c("rSSSSrrr")),
booktabs = TRUE, sanitize.rownames.function = bold,
sanitize.colnames.function = bold, sanitize.text.function = identity)
######################################
### TABLES FOR PSM-DID REGRESSIONS ###
######################################
library(Matching)
library(purrr)
library(dplyr)
library(magrittr)
library(xtable)
source("~/Dropbox/PHD/Indonesia_GPS/replication-package/tables-source.R")
load("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/results/peatland-cf-pop-1215-0001.RData")
load("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/results/peatland-cf-pop-1617-0001.RData")
### 1. Main Results: PSM-DID on 5 land uses, full sample (no buffers) ###
#list regressions
psmain <- list(PSM_DDD_virginclip_pop2012,
PSM_DDD_virginclip_pop2013,
PSM_DDD_virginclip_pop2014,
PSM_DDD_virginclip_pop2015,
PSM_DDD_virginclip_pop2016,
PSM_DDD_virginclip_pop2017)
#transform into dataframe (unlist)
psmain <- psmain %>%
map(., chainer) %>%
map_dfr(., decharacterise) %>%
mutate_at(c("ATT", "AI SE", "t-stat", "Treated", "Matched"), round, digits = 3) %>%
mutate(pvalue = gsub("<", "", as.character(pvalue))) %>%
mutate(pvalue = as.numeric(pvalue)) %>%
mutate(pvalue = format(round(pvalue, digits = 3), nsmall = 3)) %>%
mutate(ATT = case_when(pvalue < 0.01 ~ paste0(ATT,"***"),
pvalue < 0.05 & pvalue >= 0.01 ~ paste0(ATT,"**"),
pvalue < 0.1 & pvalue >= 0.05 ~ paste0(ATT,"*"),
pvalue > 0.1 ~ paste0(ATT,""))) %>%
mutate(Dropped = Treated - Matched) %>%
set_rownames(c("Endpoint 2012",
"Endpoint 2013",
"Endpoint 2014",
"Endpoint 2015",
"Endpoint 2016",
"Endpoint 2017")) %>%
rename("p-value" = pvalue)
#relist and add notes
mainlist <- list(psmain)
attr(mainlist, "message") <- c("\\scriptsize{\\textit{Notes}: \\textcite{Abadie2006} standard errors.}",
"\\scriptsize{Maximum caliper width: $0.0001$. 1-to-1 matching with replacement, keeping ties.}",
"\\scriptsize{* $p < 0.1$, ** $p < 0.05$, *** $p < 0.01$.}")
#print LaTeX table
print(xtableList(mainlist, digits = c(0,4,4,3,4,0,0,0), align = c("rSSSSrrr")),
booktabs = TRUE, sanitize.rownames.function = bold,
sanitize.colnames.function = bold, sanitize.text.function = identity)
load("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/results/dryland-cf-pop-161718-2.RData")
View(PSM_DDD_virginclip_pop2017)
sum(unique(PSM_DDD_virginclip_pop2017$index.treated), unique(PSM_DDD_virginclip_pop2017$index.control)
)
sum(length(unique(PSM_DDD_virginclip_pop2017$index.treated)),length(unique(PSM_DDD_virginclip_pop2017$index.control)))
350912+7894
7894/358806
library(cem)
?att
load("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/results/cem-results.RData")
View(mat24)
mat24[["w"]]
mat24[["groups"]]
mat24[["strata"]]
unique(mat24$strata)
mat24
mat24$w
summary(mat24$w)
plot(density(mat24$w))
load("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/results/dryland-cf-pop-161718-2.RData")
load("~/Dropbox/PHD/Indonesia_GPS/r-code-pnas-revision/results/dryland-cf-pop-161718-2.RData")
View(PSM_DID_virginclip_pop2017)
summary(PSM_DDD_virginclip_pop2016)
library(Matching)
summary(PSM_DDD_virginclip_pop2016)
sum(unique(PSM_DID_virginclip_pop2016$index.control), unique(PSM_DDD_virginclip_pop2016$index.treated))
sum(length(unique(PSM_DID_virginclip_pop2016$index.control)), length(unique(PSM_DDD_virginclip_pop2016$index.treated)))
350912+length(unique(PSM_DDD_virginclip_pop2016£))
350912+length(unique(PSM_DDD_virginclip_pop2016$index.dropped))
7894/358806
160012/567634
160012-152118
350912-152118
7894/160012
load("~/Dropbox/PHD/Indonesia_GPS/data-for-analyses/virginclip_pop_noelev.RData")
virginclip_pop <- virginclip_pop %>%
dplyr::select(-geometry) %>%
filter(peat_depth_GW==0)
# outcome vars
library(tidyverse)
virginclip_pop <- virginclip_pop %>%
dplyr::select(-geometry) %>%
filter(peat_depth_GW==0)
load("~/Dropbox/PHD/Indonesia_GPS/data-for-analyses/virginclip_pop.RData")
virginclip_pop <- virginclip_pop %>%
dplyr::select(-geometry) %>%
filter(peat_depth_GW==0)
948011-854456
658015-567634
install.packages("blogdown")
install.packages("blogdown")
library(blogdown)
districts_RWA = readRDS("~/Dropbox/Work/RA/services micro ssa/data/Alesina et al. (2020, ECMA)/17018_Data_and_Programs/replication_data/district_identifiers/districts_RWA.rds")
length(unique(districts_RWA$district))
rwanda.map <- sf::read_sf(dsn = "~/Dropbox/Work/RA/services micro ssa/data/Alesina et al. (2020, ECMA)/17018_Data_and_Programs/replication_data/gis", layer = "districts_RWA") %>%
select(-IPUM1991) %>%
rename(admin = ADMIN_NAME)
library(tidyverse)
library(sf)
rwanda.map <- sf::read_sf(dsn = "~/Dropbox/Work/RA/services micro ssa/data/Alesina et al. (2020, ECMA)/17018_Data_and_Programs/replication_data/gis", layer = "districts_RWA") %>%
select(-IPUM1991) %>%
rename(admin = ADMIN_NAME)
length(rwanda.map$district)
setwd("~/Dropbox/Work/RA/services micro ssa/Report/github-webapp/eui-online-appendix")
blogdown::serve_site()
